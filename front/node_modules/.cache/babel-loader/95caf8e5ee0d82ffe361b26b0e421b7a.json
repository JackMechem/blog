{"ast":null,"code":"var _jsxFileName = \"/home/jack/Documents/blog/front/src/routes/Home.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Markdown, { compiler } from 'markdown-to-jsx';\nimport Card from '../comps/Card';\nimport { Cards } from '../style/comps';\nimport sample from '../photos/sample.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useFetch = (url, reqOpt) => {\n  _s();\n\n  const [content, setContent] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(async () => {\n    const response = await fetch(url, reqOpt);\n    const data = await response.json();\n    setContent(data);\n    setLoading(false);\n  }, []);\n  return {\n    content,\n    loading\n  };\n};\n\n_s(useFetch, \"1BcwpdEse31aNgYBA8m0JPdI1cM=\");\n\nconst Home = () => {\n  _s2();\n\n  const reqOpt = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: 1\n    })\n  };\n  const {\n    content,\n    loading\n  } = useFetch('http://localhost:3500/articles/find');\n  console.log(content);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Cards, {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"...loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this) : content.map(info => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          title: info.card_title,\n          photo: info.card_image_link,\n          desc: info.card_desc\n        }, info.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n};\n\n_s2(Home, \"My6jFHX861EH3RkMYuTwScdhtj0=\", false, function () {\n  return [useFetch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/jack/Documents/blog/front/src/routes/Home.js"],"names":["React","useState","useEffect","Markdown","compiler","Card","Cards","sample","useFetch","url","reqOpt","content","setContent","loading","setLoading","response","fetch","data","json","Home","method","headers","body","JSON","stringify","id","console","log","map","info","card_title","card_image_link","card_desc"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,IAAmBC,QAAnB,QAAmC,iBAAnC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAAA;;AAE9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMa,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAMC,MAAN,CAA5B;AACA,UAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAN,IAAAA,UAAU,CAACK,IAAD,CAAV;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GALQ,EAKN,EALM,CAAT;AAOA,SAAO;AAAEH,IAAAA,OAAF;AAAWE,IAAAA;AAAX,GAAP;AACH,CAbD;;GAAML,Q;;AAeN,MAAMW,IAAI,GAAG,MAAM;AAAA;;AAGf,QAAMT,MAAM,GAAG;AACXU,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFE;AAGXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAf;AAHK,GAAf;AAMA,QAAM;AAAEd,IAAAA,OAAF;AAAWE,IAAAA;AAAX,MAAuBL,QAAQ,CAAC,qCAAD,CAArC;AAGAkB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AAEA,sBAAQ;AAAA,2BACJ,QAAC,KAAD;AAAA,gBACKE,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA2BF,OAAO,CAACiB,GAAR,CAAaC,IAAD,IAAU;AACrD,4BAAQ,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEA,IAAI,CAACC,UAAlB;AAA8B,UAAA,KAAK,EAAED,IAAI,CAACE,eAA1C;AAA2D,UAAA,IAAI,EAAEF,IAAI,CAACG;AAAtE,WAAsFH,IAAI,CAACJ,EAA3F;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH,OAFkC;AADvC;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UAAR;AAiBH,CA/BD;;IAAMN,I;UAS2BX,Q;;;KAT3BW,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Markdown, { compiler } from 'markdown-to-jsx';\nimport Card from '../comps/Card';\nimport { Cards } from '../style/comps';\nimport sample from '../photos/sample.jpeg';\n\nconst useFetch = (url, reqOpt) => {\n\n    const [content, setContent] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(async () => {\n        const response = await fetch(url, reqOpt);\n        const data = await response.json();\n        setContent(data);\n        setLoading(false);\n    }, []);\n\n    return { content, loading }\n}\n\nconst Home = () => {\n\n\n    const reqOpt = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ id: 1 })\n    }\n\n    const { content, loading } = useFetch('http://localhost:3500/articles/find');\n\n\n    console.log(content);\n\n    return (<div>\n        <Cards>\n            {loading ? <div>...loading</div> : content.map((info) => {\n                return (<Card title={info.card_title} photo={info.card_image_link} desc={info.card_desc} key={info.id}></Card>)\n            })}\n        </Cards>\n\n        {/* {compiler(`\n# This is Markdown \n#### You can edit me\n* You can have lists, like this one\n* Make things **bold** or *italic*\n* Embed snippets of\n\n# Hello\n`)} */}\n    </div>);\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}