{"ast":null,"code":"var _jsxFileName = \"/home/jack/Documents/blog/front/src/routes/Home.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Markdown, { compiler } from 'markdown-to-jsx';\nimport Card from '../comps/Card';\nimport { Cards } from '../style/comps';\nimport sample from '../photos/sample.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useFetch = url => {\n  _s();\n\n  const [content, setContent] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(async () => {\n    const reqOpt = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: 'React POST Request Example'\n      })\n    };\n    const response = await fetch(url);\n    const data = await response.json();\n    setContent(data);\n    setLoading(false);\n  }, []);\n  return {\n    content,\n    loading\n  };\n};\n\n_s(useFetch, \"1BcwpdEse31aNgYBA8m0JPdI1cM=\");\n\nconst Home = () => {\n  _s2();\n\n  const {\n    content,\n    loading\n  } = useFetch('http://localhost:3500/articles/all');\n  const md = `\n    # This is Markdown\n\n#### You can edit me\n\n# Hello\n    `;\n  console.log(content);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Cards, {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"...loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 24\n      }, this) : content.map(info => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          title: info.card_title,\n          photo: info.card_image_link,\n          desc: info.card_desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n};\n\n_s2(Home, \"My6jFHX861EH3RkMYuTwScdhtj0=\", false, function () {\n  return [useFetch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/jack/Documents/blog/front/src/routes/Home.js"],"names":["React","useState","useEffect","Markdown","compiler","Card","Cards","sample","useFetch","url","content","setContent","loading","setLoading","reqOpt","method","headers","body","JSON","stringify","title","response","fetch","data","json","Home","md","console","log","map","info","card_title","card_image_link","card_desc"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,IAAmBC,QAAnB,QAAmC,iBAAnC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAEtB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMY,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE,MADG;AAEXC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFE;AAGXC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAf;AAHK,KAAf;AAKA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACb,GAAD,CAA5B;AACA,UAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAb,IAAAA,UAAU,CAACY,IAAD,CAAV;AACAV,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAVQ,EAUN,EAVM,CAAT;AAYA,SAAO;AAAEH,IAAAA,OAAF;AAAWE,IAAAA;AAAX,GAAP;AACH,CAlBD;;GAAMJ,Q;;AAoBN,MAAMiB,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM;AAAEf,IAAAA,OAAF;AAAWE,IAAAA;AAAX,MAAuBJ,QAAQ,CAAC,oCAAD,CAArC;AAEA,QAAMkB,EAAE,GAAI;AAChB;AACA;AACA;AACA;AACA;AACA,KANI;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAZ;AAEA,sBAAQ;AAAA,2BACJ,QAAC,KAAD;AAAA,gBACKE,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA2BF,OAAO,CAACmB,GAAR,CAAaC,IAAD,IAAU;AACrD,4BAAQ,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEA,IAAI,CAACC,UAAlB;AAA8B,UAAA,KAAK,EAAED,IAAI,CAACE,eAA1C;AAA2D,UAAA,IAAI,EAAEF,IAAI,CAACG;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH,OAFkC;AADvC;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UAAR;AAiBH,CA/BD;;IAAMR,I;UAE2BjB,Q;;;KAF3BiB,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Markdown, { compiler } from 'markdown-to-jsx';\nimport Card from '../comps/Card';\nimport { Cards } from '../style/comps';\nimport sample from '../photos/sample.jpeg';\n\nconst useFetch = (url) => {\n\n    const [content, setContent] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(async () => {\n        const reqOpt = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title: 'React POST Request Example' })\n        }\n        const response = await fetch(url);\n        const data = await response.json();\n        setContent(data);\n        setLoading(false);\n    }, []);\n\n    return { content, loading }\n}\n\nconst Home = () => {\n\n    const { content, loading } = useFetch('http://localhost:3500/articles/all');\n\n    const md = `\n    # This is Markdown\n\n#### You can edit me\n\n# Hello\n    `\n\n    console.log(content);\n\n    return (<div>\n        <Cards>\n            {loading ? <div>...loading</div> : content.map((info) => {\n                return (<Card title={info.card_title} photo={info.card_image_link} desc={info.card_desc}></Card>)\n            })}\n        </Cards>\n\n        {/* {compiler(`\n# This is Markdown \n#### You can edit me\n* You can have lists, like this one\n* Make things **bold** or *italic*\n* Embed snippets of\n\n# Hello\n`)} */}\n    </div>);\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}